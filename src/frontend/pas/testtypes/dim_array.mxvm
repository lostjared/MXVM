program TestArray {
	section module {
 
	}
	section data {
		int rax = 0
		int rbx = 0
		int rcx = 0
		int rdx = 0
		int rsi = 0
		int rdi = 0
		int r8 = 0
		int r9 = 0
		int r10 = 0
		ptr _tmpptr0 = null
		ptr _tmpptr1 = null
		string str_0 = "value is: "
		string fmt_int = "%lld "
		string fmt_str = "%s "
		string newline = "\n"
		ptr grid = null
		int i = 0
		int z = 0
	}
	section code {
	start:
		alloc grid, 200
		mov z, 0
	FOR_0:
		mov rbx, 3
		cmp z, rbx
		jg ENDFOR_1
		mov i, 0
	FOR_2:
		mov rcx, 3
		cmp i, rcx
		jg ENDFOR_3
		mov rdx, i
		mul rdx, z
		mov rsi, rdx
		add rsi, 1
		mov rdi, z
		mov r8, rdi
		cmp r8, 0
		jl IDX_OOB_5
		cmp r8, 4
		jg IDX_OOB_5
		jmp IDX_OK_4
	IDX_OOB_5:
		exit 1
	IDX_OK_4:
		mov r8, z
		mov r9, i
		mov r10, r9
		cmp r10, 0
		jl IDX_OOB_7
		cmp r10, 4
		jg IDX_OOB_7
		jmp IDX_OK_6
	IDX_OOB_7:
		exit 1
	IDX_OK_6:
		mov r9, i
		mov r10, r9
		mul r10, 40
		mov _tmpptr0, grid
		add _tmpptr0, r10
		mov r9, r8
		mul r9, 8
		store rsi, _tmpptr0, r9, 8
		print fmt_str, str_0
		mov r8, z
		mov r9, r8
		cmp r9, 0
		jl IDX_OOB_9
		cmp r9, 4
		jg IDX_OOB_9
		jmp IDX_OK_8
	IDX_OOB_9:
		exit 1
	IDX_OK_8:
		mov r8, z
		mov r9, i
		mov r10, r9
		cmp r10, 0
		jl IDX_OOB_11
		cmp r10, 4
		jg IDX_OOB_11
		jmp IDX_OK_10
	IDX_OOB_11:
		exit 1
	IDX_OK_10:
		mov r9, i
		mov r10, r9
		mul r10, 40
		mov _tmpptr1, grid
		add _tmpptr1, r10
		mov r10, r8
		mul r10, 8
		load r9, _tmpptr1, r10, 8
		print fmt_int, r9
		print newline
		add i, 1
		jmp FOR_2
	ENDFOR_3:
		add z, 1
		jmp FOR_0
	ENDFOR_1:
		free grid
		done
	}
}

